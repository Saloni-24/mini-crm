const jwt = require("jsonwebtoken");

// Check if the user is logged in using token
const protect = (req, res, next) => {
  const tokenHeader = req.headers.authorization;

  // If no token or wrong format
  if (!tokenHeader || !tokenHeader.startsWith("Bearer ")) {
    console.log(" Token is missing or format is wrong");
    return res.status(401).json({ message: "Login first! Token is required ðŸªª" });
  }

  const token = tokenHeader.split(" ")[1];

  try {
    // Verify the token using secret key
    const decodedUser = jwt.verify(token, process.env.JWT_SECRET );

    // Save user data in request
    req.user = decodedUser;
    console.log(" Token verified, user is:", decodedUser.username);
    next();
  } catch (err) {
    console.log("something is wrong with token:", err.message);
    res.status(401).json({ message: "Token is invalid! Login again " });
  }
};

// Check if the user is an admin
const isAdmin = (req, res, next) => {
  if (req.user && req.user.role === "admin") {
    console.log(" Admin access approved ");
    next();
  } else {
    console.log(" Access denied! you are not the admin..");
    res.status(403).json({ message: "Only admins allowed here! " });
  }
};

module.exports = { protect, isAdmin };
